#!/bin/bash

configPath="$HOME/.config/mountsamba"
configName="$configPath/mountsambarc"
logName="$configPath/mountsamba.log"

# Read necessary values for mount.cifs mounting
sambaPrompt() {
	echo -e "Mount cifs samba shell script\nPlease run as root...\n"
	read -p "input username:" samba_username
	read -p "input password:" samba_password
	read -p "input port:" samba_port
	read -p "input path+folder (eg. web/folder):" samba_path
	read -p "input mount point:" samba_point
}

# Mount samba disk
folderMount() {
	pointStr=$(eval "echo $point")
	if [[ -f $pointStr ]]; then
		echo -e "mount point exists\n"
		echo $samba_point
		sudo mount.cifs -o user=$samba_username,pass=$samba_password,port=$samba_port //$samba_path $samba_point
	else
		echo -e "mount point does not exist\n"
		echo $samba_point
		# echo "mount.cifs -o user=$samba_username,pass=$samba_password,port=$samba_port //$samba_path $samba_point"
		sudo mount.cifs -o user=$samba_username,pass=$samba_password,port=$samba_port //$samba_path $samba_point
	fi
}

# Read mount list and umount
folderUmount() {
	mountpoint -q /home/qilin/media/openWrt
}

# Initiate configuration files
configInit() {
	if [[ -d $configPath ]]; then
		echo "config exist"
		[[ ! -f $configName ]] || touch $configName
		[[ ! -f $logName ]] || touch $logName
	else
		echo "config does not exist, generate"
		# if not a directory, delete then recreate
		[[ -f $configPath ]] && echo "deleting no directory config" && rm $configPath
		mkdir -p $configPath
		touch $configName
		touch $logName
		echo "config initiate finish"
	fi
}

# Load configuration files
# method 1 use source command
# method 2 actual read it
configLoad() {
	# cat $configName | while read line
	# do
	#     echo $line
	# done
	source $configName
}

action_choose() {
	choose="1"
	while [[ $choose != "q" ]]; do
		read -p "Using input or config?(1/0/q) default 1:" choose
		if [[ $choose == "1" ]]; then
			sambaPrompt
			folderMount
			break
		elif [[ $choose == "0" ]]; then
			configInit
			configLoad
			folderMount
			break
		fi
	done
}

action_choose

